name: CI for Windows

on:
  push:
    branches:
      - main

jobs:
  windows:
    name: Windows
    runs-on: windows-2022
    timeout-minutes: 120
    env:
      CHILD_CONCURRENCY: "1"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.7"
      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "value=$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)" >> $GITHUB_OUTPUT
      - name: Cache node_modules archive
        id: cacheNodeModules
        uses: actions/cache@v3
        with:
          path: ".build/node_modules_cache"
          key: "${{ runner.os }}-cacheNodeModulesArchive-${{ steps.nodeModulesCacheKey.outputs.value }}"
      - name: Extract node_modules archive
        if: ${{ steps.cacheNodeModules.outputs.cache-hit == 'true' }}
        run: 7z.exe x .build/node_modules_cache/cache.7z -aos
      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache yarn directory
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-yarnCacheDir-
      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        run: yarn --frozen-lockfile --network-timeout 180000
      - name: Create node_modules archive
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: |
          mkdir -Force .build
          node build/azure-pipelines/common/listNodeModules.js .build/node_modules_list.txt
          mkdir -Force .build/node_modules_cache
          7z.exe a .build/node_modules_cache/cache.7z -mx3 `@.build/node_modules_list.txt
      - name: Build for x64
        run: yarn gulp vscode-win32-x64
      - name: Upload Artifact x64 OUT-BUILD Portable ZIP
        uses: actions/upload-artifact@v4.0.0
        with:
          name: VSCode-win32-x64
          path: D:/a/vscode-autobuilds/vscode-autobuilds/out-build/
#      - name: Take a look at the System Setup Directory
#        run: |
#          cmd /c 'dir D:\a\vscode-autobuilds\vscode-autobuilds'
#      - name: Upload Artifact x64 System Installer
#        uses: actions/upload-artifact@v4.0.0
#        with:
#          name: VSCode-win32-x64-Setup-Sys
#          path: D:/a/vscode-autobuilds/vscode-autobuilds/.build/win32-x64/system-setup/*
#      - name: Upload Artifact x64 User Installer
#        uses: actions/upload-artifact@v4.0.0
#        with:
#          name: VSCode-win32-x64-Setup-Usr
#          path: D:/a/vscode-autobuilds/vscode-autobuilds/.build/win32-x64/user-setup/* 
